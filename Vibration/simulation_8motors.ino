#include <Sparkfun_DRV2605L.h>
#include <Wire.h>

SFE_HMD_DRV2605L HMD;

int F = 1; //frequency of the signal
int Fs = 50; //sampling frequency
int n = 1000; //number of samples
float t; //Time instance
int sampling_interval;
byte samples_0[1000];
byte samples_1[1000];
byte samples_2[1000];
byte samples_3[1000];
byte samples_4[1000];
byte samples_5[1000];
byte samples_6[1000];
byte samples_7[1000];

 // to store the samples

const int analogOutPin0 = 14; // Analog output pin that the Haptic Motor Driver is attached to
const int analogOutPin1 = 32; // Analog output pin that the Haptic Motor Driver is attached to
const int analogOutPin2 = 15; // Analog output pin that the Haptic Motor Driver is attached to
const int analogOutPin3 = 33;
const int analogOutPin4 = 35;
const int analogOutPin5 = 36;
const int analogOutPin6 = 39;
const int analogOutPin7 = 34; // Analog output pin that the Haptic Motor Driver is attached to

const int buttonPin = 2;  // Pin connected to the button

void setup() 
{
  HMD.begin();
  Serial.begin(9600);
  HMD.Mode(0x03); //PWM INPUT 
  HMD.MotorSelect(0x0A);
  HMD.Library(7); //change to 6 for LRA motors 

  pinMode(analogOutPin0, OUTPUT);
  pinMode(analogOutPin1, OUTPUT); 
  pinMode(analogOutPin2, OUTPUT); 
  pinMode(analogOutPin3, OUTPUT); 
  pinMode(analogOutPin4, OUTPUT); 
  pinMode(analogOutPin5, OUTPUT);
  pinMode(analogOutPin6, OUTPUT);
  pinMode(analogOutPin7, OUTPUT);

  pinMode(buttonPin, INPUT);
  
  t = 0;

  for (int n = 0; n < 1000; n++) 
  { 
    //t = (float) n / Fs; //creating time isntance to find n sample
    t += 0;
    //samples[n] = (byte) (127.0 * sin(2 * 3.14 * t) + 127.0 ); //calculating the sin value at each time instance
    samples_0[n] = (byte) 321.75 + -0.08 * cos(1* 2 * PI * 1 * t) + -0.00 * sin(1* 2 * PI * 1 * t) + 0.04 * cos(2* 2 * PI * 1 * t) + 0.01 * sin(2* 2 * PI * 1 * t) + 0.05 * cos(3* 2 * PI * 1 * t) + 0.04 * sin(3* 2 * PI * 1 * t) + -0.01 * cos(4* 2 * PI * 1 * t) + -0.06 * sin(4* 2 * PI * 1 * t) + -0.02 * cos(5* 2 * PI * 1 * t) + 0.67 * sin(5* 2 * PI * 1 * t) + 0.23 * cos(6* 2 * PI * 1 * t) + -0.12 * sin(6* 2 * PI * 1 * t) + -0.03 * cos(7* 2 * PI * 1 * t) + 0.02 * sin(7* 2 * PI * 1 * t) + -0.01 * cos(8* 2 * PI * 1 * t) + -0.01 * sin(8* 2 * PI * 1 * t) + 0.02 * cos(9* 2 * PI * 1 * t) + -0.01 * sin(9* 2 * PI * 1 * t) + -0.01 * cos(10* 2 * PI * 1 * t) + -0.00 * sin(10* 2 * PI * 1 * t) + 0.03 * cos(11* 2 * PI * 1 * t) + 0.07 * sin(11* 2 * PI * 1 * t) + -0.13 * cos(12* 2 * PI * 1 * t) + -0.04 * sin(12* 2 * PI * 1 * t) + 0.14 * cos(13* 2 * PI * 1 * t) + -0.04 * sin(13* 2 * PI * 1 * t) + -0.09 * cos(14* 2 * PI * 1 * t) + -0.01 * sin(14* 2 * PI * 1 * t) + 0.01 * cos(15* 2 * PI * 1 * t) + 0.01 * sin(15* 2 * PI * 1 * t) + -0.02 * cos(16* 2 * PI * 1 * t) + 0.04 * sin(16* 2 * PI * 1 * t) + 0.09 * cos(17* 2 * PI * 1 * t) + 0.02 * sin(17* 2 * PI * 1 * t) + -0.05 * cos(18* 2 * PI * 1 * t) + 0.19 * sin(18* 2 * PI * 1 * t) + 0.57 * cos(19* 2 * PI * 1 * t) + -0.11 * sin(19* 2 * PI * 1 * t) + -0.07 * cos(20* 2 * PI * 1 * t) + -0.01 * sin(20* 2 * PI * 1 * t) + -0.02 * cos(21* 2 * PI * 1 * t) + -0.02 * sin(21* 2 * PI * 1 * t) + 0.00 * cos(22* 2 * PI * 1 * t) + 0.01 * sin(22* 2 * PI * 1 * t) + 0.00 * cos(23* 2 * PI * 1 * t) + -0.02 * sin(23* 2 * PI * 1 * t) + -0.13 * cos(24* 2 * PI * 1 * t) + -3.21 * sin(24* 2 * PI * 1 * t) + -2.13 * cos(25* 2 * PI * 1 * t) + 0.07 * sin(25* 2 * PI * 1 * t) + 0.10 * cos(26* 2 * PI * 1 * t) + 0.01 * sin(26* 2 * PI * 1 * t) + -0.01 * cos(27* 2 * PI * 1 * t) + 0.03 * sin(27* 2 * PI * 1 * t) + 0.01 * cos(28* 2 * PI * 1 * t) + -0.00 * sin(28* 2 * PI * 1 * t) + -0.01 * cos(29* 2 * PI * 1 * t) + -0.12 * sin(29* 2 * PI * 1 * t) + 0.02 * cos(30* 2 * PI * 1 * t) + -0.01 * sin(30* 2 * PI * 1 * t) + 0.15 * cos(31* 2 * PI * 1 * t) + -0.01 * sin(31* 2 * PI * 1 * t) + -0.02 * cos(32* 2 * PI * 1 * t) + 0.08 * sin(32* 2 * PI * 1 * t) + -0.03 * cos(33* 2 * PI * 1 * t) + 0.01 * sin(33* 2 * PI * 1 * t) + 0.01 * cos(34* 2 * PI * 1 * t) + -0.00 * sin(34* 2 * PI * 1 * t) + 0.05 * cos(35* 2 * PI * 1 * t) + -0.02 * sin(35* 2 * PI * 1 * t) + 0.00 * cos(36* 2 * PI * 1 * t) + 0.14 * sin(36* 2 * PI * 1 * t) + -0.08 * cos(37* 2 * PI * 1 * t) + 1.09 * sin(37* 2 * PI * 1 * t) + -0.54 * cos(38* 2 * PI * 1 * t) + -0.03 * sin(38* 2 * PI * 1 * t) + -0.08 * cos(39* 2 * PI * 1 * t); 
    samples_1[n] = (byte) 100 + 0.04 * sin(39* 2 * PI * 1 * t) + -0.00 * cos(40* 2 * PI * 1 * t) + -0.01 * sin(40* 2 * PI * 1 * t) + -0.04 * cos(41* 2 * PI * 1 * t) + 0.03 * sin(41* 2 * PI * 1 * t) + -0.02 * cos(42* 2 * PI * 1 * t) + 0.03 * sin(42* 2 * PI * 1 * t) + -0.04 * cos(43* 2 * PI * 1 * t) + -0.19 * sin(43* 2 * PI * 1 * t) + 1.14 * cos(44* 2 * PI * 1 * t) + 0.02 * sin(44* 2 * PI * 1 * t) + -0.04 * cos(45* 2 * PI * 1 * t) + -0.03 * sin(45* 2 * PI * 1 * t) + 0.00 * cos(46* 2 * PI * 1 * t) + -0.02 * sin(46* 2 * PI * 1 * t) + -0.03 * cos(47* 2 * PI * 1 * t) + 0.03 * sin(47* 2 * PI * 1 * t) + 0.00 * cos(48* 2 * PI * 1 * t) + 0.06 * sin(48* 2 * PI * 1 * t) + -0.05 * cos(49* 2 * PI * 1 * t) + -0.44 * sin(49* 2 * PI * 1 * t) + 0.45 * cos(50* 2 * PI * 1 * t) + -0.09 * sin(50* 2 * PI * 1 * t) + -0.03 * cos(51* 2 * PI * 1 * t) + 0.04 * sin(51* 2 * PI * 1 * t) + 0.04 * cos(52* 2 * PI * 1 * t) + 0.01 * sin(52* 2 * PI * 1 * t) + -0.00 * cos(53* 2 * PI * 1 * t) + 0.02 * sin(53* 2 * PI * 1 * t) + -0.05 * cos(54* 2 * PI * 1 * t) + 0.07 * sin(54* 2 * PI * 1 * t) + 0.04 * cos(55* 2 * PI * 1 * t) + 0.02 * sin(55* 2 * PI * 1 * t) + -0.05 * cos(56* 2 * PI * 1 * t) + 0.04 * sin(56* 2 * PI * 1 * t) + 0.19 * cos(57* 2 * PI * 1 * t) + 0.05 * sin(57* 2 * PI * 1 * t) + 0.03 * cos(58* 2 * PI * 1 * t) + 0.00 * sin(58* 2 * PI * 1 * t) + 0.03 * cos(59* 2 * PI * 1 * t) + -0.02 * sin(59* 2 * PI * 1 * t) + -0.01 * cos(60* 2 * PI * 1 * t) + -0.01 * sin(60* 2 * PI * 1 * t) + -0.05 * cos(61* 2 * PI * 1 * t) + -0.08 * sin(61* 2 * PI * 1 * t) + -0.10 * cos(62* 2 * PI * 1 * t) + 2.16 * sin(62* 2 * PI * 1 * t) + 0.86 * cos(63* 2 * PI * 1 * t) + -0.00 * sin(63* 2 * PI * 1 * t) + -0.04 * cos(64* 2 * PI * 1 * t) + 0.00 * sin(64* 2 * PI * 1 * t) + 0.00 * cos(65* 2 * PI * 1 * t) + -0.03 * sin(65* 2 * PI * 1 * t) + 0.03 * cos(66* 2 * PI * 1 * t) + -0.01 * sin(66* 2 * PI * 1 * t) + -0.02 * cos(67* 2 * PI * 1 * t) + 0.08 * sin(67* 2 * PI * 1 * t) + 0.04 * cos(68* 2 * PI * 1 * t) + -0.04 * sin(68* 2 * PI * 1 * t) + -2.49 * cos(69* 2 * PI * 1 * t) + 0.01 * sin(69* 2 * PI * 1 * t) + -0.00 * cos(70* 2 * PI * 1 * t) + -0.00 * sin(70* 2 * PI * 1 * t) + -0.04 * cos(71* 2 * PI * 1 * t) + 0.03 * sin(71* 2 * PI * 1 * t) + 0.03 * cos(72* 2 * PI * 1 * t) + -0.02 * sin(72* 2 * PI * 1 * t) + 0.04 * cos(73* 2 * PI * 1 * t) + 0.09 * sin(73* 2 * PI * 1 * t) + 0.03 * cos(74* 2 * PI * 1 * t) + 0.01 * sin(74* 2 * PI * 1 * t) + 0.76 * cos(75* 2 * PI * 1 * t) + -0.16 * sin(75* 2 * PI * 1 * t) + 0.10 * cos(76* 2 * PI * 1 * t) + -0.01 * sin(76* 2 * PI * 1 * t) + -0.01 * cos(77* 2 * PI * 1 * t) + 0.00 * sin(77* 2 * PI * 1 * t) + 0.01 * cos(78* 2 * PI * 1 * t);
    samples_2[n] = (byte) 100 + 0.03 * sin(78* 2 * PI * 1 * t) + 0.01 * cos(79* 2 * PI * 1 * t) + 0.02 * sin(79* 2 * PI * 1 * t) + 0.02 * cos(80* 2 * PI * 1 * t) + -0.06 * sin(80* 2 * PI * 1 * t) + -0.05 * cos(81* 2 * PI * 1 * t) + -0.75 * sin(81* 2 * PI * 1 * t) + -0.01 * cos(82* 2 * PI * 1 * t) + -0.03 * sin(82* 2 * PI * 1 * t) + 0.03 * cos(83* 2 * PI * 1 * t) + -0.03 * sin(83* 2 * PI * 1 * t) + 0.00 * cos(84* 2 * PI * 1 * t) + 0.00 * sin(84* 2 * PI * 1 * t) + -0.01 * cos(85* 2 * PI * 1 * t) + -0.03 * sin(85* 2 * PI * 1 * t) + 0.02 * cos(86* 2 * PI * 1 * t) + 0.00 * sin(86* 2 * PI * 1 * t) + -0.02 * cos(87* 2 * PI * 1 * t) + -0.51 * sin(87* 2 * PI * 1 * t) + -0.73 * cos(88* 2 * PI * 1 * t) + 0.11 * sin(88* 2 * PI * 1 * t) + -0.05 * cos(89* 2 * PI * 1 * t) + 0.03 * sin(89* 2 * PI * 1 * t) + 0.01 * cos(90* 2 * PI * 1 * t) + 0.00 * sin(90* 2 * PI * 1 * t) + 0.01 * cos(91* 2 * PI * 1 * t) + 0.01 * sin(91* 2 * PI * 1 * t) + -0.04 * cos(92* 2 * PI * 1 * t) + -0.03 * sin(92* 2 * PI * 1 * t) + -0.02 * cos(93* 2 * PI * 1 * t) + -0.67 * sin(93* 2 * PI * 1 * t) + 0.43 * cos(94* 2 * PI * 1 * t) + -0.00 * sin(94* 2 * PI * 1 * t) + -0.02 * cos(95* 2 * PI * 1 * t) + -0.01 * sin(95* 2 * PI * 1 * t) + -0.01 * cos(96* 2 * PI * 1 * t) + -0.02 * sin(96* 2 * PI * 1 * t) + 0.01 * cos(97* 2 * PI * 1 * t) + -0.02 * sin(97* 2 * PI * 1 * t) + 0.04 * cos(98* 2 * PI * 1 * t) + -0.08 * sin(98* 2 * PI * 1 * t) + 0.02 * cos(99* 2 * PI * 1 * t) + 0.17 * sin(99* 2 * PI * 1 * t) + 0.19 * cos(100* 2 * PI * 1 * t) + -0.03 * sin(100* 2 * PI * 1 * t) + 0.11 * cos(101* 2 * PI * 1 * t) + -0.01 * sin(101* 2 * PI * 1 * t) + -0.05 * cos(102* 2 * PI * 1 * t) + -0.03 * sin(102* 2 * PI * 1 * t) + -0.00 * cos(103* 2 * PI * 1 * t) + -0.02 * sin(103* 2 * PI * 1 * t) + 0.00 * cos(104* 2 * PI * 1 * t) + -0.03 * sin(104* 2 * PI * 1 * t) + 0.01 * cos(105* 2 * PI * 1 * t) + -0.00 * sin(105* 2 * PI * 1 * t) + -0.02 * cos(106* 2 * PI * 1 * t) + 0.56 * sin(106* 2 * PI * 1 * t) + 0.58 * cos(107* 2 * PI * 1 * t) + -0.07 * sin(107* 2 * PI * 1 * t) + -0.05 * cos(108* 2 * PI * 1 * t) + -0.07 * sin(108* 2 * PI * 1 * t) + -0.02 * cos(109* 2 * PI * 1 * t) + 0.00 * sin(109* 2 * PI * 1 * t) + 0.02 * cos(110* 2 * PI * 1 * t) + 0.03 * sin(110* 2 * PI * 1 * t) + -0.01 * cos(111* 2 * PI * 1 * t) + 0.01 * sin(111* 2 * PI * 1 * t) + -0.00 * cos(112* 2 * PI * 1 * t) + 0.41 * sin(112* 2 * PI * 1 * t) + 0.36 * cos(113* 2 * PI * 1 * t) + -0.01 * sin(113* 2 * PI * 1 * t) + -0.15 * cos(114* 2 * PI * 1 * t) + 0.02 * sin(114* 2 * PI * 1 * t) + 0.05 * cos(115* 2 * PI * 1 * t) + -0.02 * sin(115* 2 * PI * 1 * t) + -0.03 * cos(116* 2 * PI * 1 * t);
    samples_3[n] = (byte) 100 + -0.04 * sin(116* 2 * PI * 1 * t) + -0.02 * cos(117* 2 * PI * 1 * t) + 0.01 * sin(117* 2 * PI * 1 * t) + -0.05 * cos(118* 2 * PI * 1 * t) + 0.39 * sin(118* 2 * PI * 1 * t) + 0.07 * cos(119* 2 * PI * 1 * t) + -0.11 * sin(119* 2 * PI * 1 * t) + -0.06 * cos(120* 2 * PI * 1 * t) + 0.02 * sin(120* 2 * PI * 1 * t) + 0.02 * cos(121* 2 * PI * 1 * t) + -0.02 * sin(121* 2 * PI * 1 * t) + -0.00 * cos(122* 2 * PI * 1 * t) + -0.02 * sin(122* 2 * PI * 1 * t) + 0.01 * cos(123* 2 * PI * 1 * t) + -0.05 * sin(123* 2 * PI * 1 * t) + 0.03 * cos(124* 2 * PI * 1 * t) + 0.04 * sin(124* 2 * PI * 1 * t) + -0.07 * cos(125* 2 * PI * 1 * t) + 0.22 * sin(125* 2 * PI * 1 * t) + -0.65 * cos(126* 2 * PI * 1 * t) + 0.05 * sin(126* 2 * PI * 1 * t) + 0.04 * cos(127* 2 * PI * 1 * t) + 0.03 * sin(127* 2 * PI * 1 * t) + -0.01 * cos(128* 2 * PI * 1 * t) + 0.04 * sin(128* 2 * PI * 1 * t) + 0.02 * cos(129* 2 * PI * 1 * t) + 0.05 * sin(129* 2 * PI * 1 * t) + 0.02 * cos(130* 2 * PI * 1 * t) + 0.00 * sin(130* 2 * PI * 1 * t) + -0.14 * cos(131* 2 * PI * 1 * t) + -1.64 * sin(131* 2 * PI * 1 * t) + -0.85 * cos(132* 2 * PI * 1 * t) + -0.11 * sin(132* 2 * PI * 1 * t) + -0.06 * cos(133* 2 * PI * 1 * t) + -0.03 * sin(133* 2 * PI * 1 * t) + -0.01 * cos(134* 2 * PI * 1 * t) + 0.02 * sin(134* 2 * PI * 1 * t) + 0.02 * cos(135* 2 * PI * 1 * t) + -0.00 * sin(135* 2 * PI * 1 * t) + -0.01 * cos(136* 2 * PI * 1 * t) + 0.14 * sin(136* 2 * PI * 1 * t) + -0.06 * cos(137* 2 * PI * 1 * t) + 0.09 * sin(137* 2 * PI * 1 * t) + 1.23 * cos(138* 2 * PI * 1 * t) + -0.01 * sin(138* 2 * PI * 1 * t) + -0.12 * cos(139* 2 * PI * 1 * t) + 0.03 * sin(139* 2 * PI * 1 * t) + -0.03 * cos(140* 2 * PI * 1 * t) + 0.01 * sin(140* 2 * PI * 1 * t) + -0.03 * cos(141* 2 * PI * 1 * t) + -0.01 * sin(141* 2 * PI * 1 * t) + -0.03 * cos(142* 2 * PI * 1 * t) + -0.01 * sin(142* 2 * PI * 1 * t) + 0.01 * cos(143* 2 * PI * 1 * t) + 0.22 * sin(143* 2 * PI * 1 * t) + -0.29 * cos(144* 2 * PI * 1 * t) + -0.30 * sin(144* 2 * PI * 1 * t) + 0.12 * cos(145* 2 * PI * 1 * t) + 0.06 * sin(145* 2 * PI * 1 * t) + -0.01 * cos(146* 2 * PI * 1 * t) + -0.02 * sin(146* 2 * PI * 1 * t) + 0.02 * cos(147* 2 * PI * 1 * t) + 0.00 * sin(147* 2 * PI * 1 * t) + -0.00 * cos(148* 2 * PI * 1 * t) + 0.01 * sin(148* 2 * PI * 1 * t) + 0.01 * cos(149* 2 * PI * 1 * t) + 0.06 * sin(149* 2 * PI * 1 * t) + -0.06 * cos(150* 2 * PI * 1 * t) + 0.38 * sin(150* 2 * PI * 1 * t) + -1.89 * cos(151* 2 * PI * 1 * t) + -0.01 * sin(151* 2 * PI * 1 * t) + 0.04 * cos(152* 2 * PI * 1 * t) + 0.03 * sin(152* 2 * PI * 1 * t) + -0.05 * cos(153* 2 * PI * 1 * t);
    samples_4[n] = (byte) 100 + 0.01 * sin(153* 2 * PI * 1 * t) + -0.02 * cos(154* 2 * PI * 1 * t) + 0.00 * sin(154* 2 * PI * 1 * t) + -0.02 * cos(155* 2 * PI * 1 * t) + -0.05 * sin(155* 2 * PI * 1 * t) + -0.13 * cos(156* 2 * PI * 1 * t) + -0.83 * sin(156* 2 * PI * 1 * t) + -2.75 * cos(157* 2 * PI * 1 * t) + -0.05 * sin(157* 2 * PI * 1 * t) + 0.07 * cos(158* 2 * PI * 1 * t) + -0.02 * sin(158* 2 * PI * 1 * t) + 0.02 * cos(159* 2 * PI * 1 * t) + 0.02 * sin(159* 2 * PI * 1 * t) + 0.04 * cos(160* 2 * PI * 1 * t) + -0.03 * sin(160* 2 * PI * 1 * t) + 0.01 * cos(161* 2 * PI * 1 * t) + -0.10 * sin(161* 2 * PI * 1 * t) + 0.05 * cos(162* 2 * PI * 1 * t) + -0.16 * sin(162* 2 * PI * 1 * t) + 0.61 * cos(163* 2 * PI * 1 * t) + -0.21 * sin(163* 2 * PI * 1 * t) + 0.10 * cos(164* 2 * PI * 1 * t) + -0.01 * sin(164* 2 * PI * 1 * t) + 0.02 * cos(165* 2 * PI * 1 * t) + 0.02 * sin(165* 2 * PI * 1 * t) + -0.02 * cos(166* 2 * PI * 1 * t) + 0.01 * sin(166* 2 * PI * 1 * t) + 0.00 * cos(167* 2 * PI * 1 * t) + -0.04 * sin(167* 2 * PI * 1 * t) + -0.02 * cos(168* 2 * PI * 1 * t) + -0.05 * sin(168* 2 * PI * 1 * t) + 0.08 * cos(169* 2 * PI * 1 * t) + 0.12 * sin(169* 2 * PI * 1 * t) + 0.20 * cos(170* 2 * PI * 1 * t) + 0.02 * sin(170* 2 * PI * 1 * t) + -0.08 * cos(171* 2 * PI * 1 * t) + 0.03 * sin(171* 2 * PI * 1 * t) + -0.02 * cos(172* 2 * PI * 1 * t) + -0.03 * sin(172* 2 * PI * 1 * t) + 0.02 * cos(173* 2 * PI * 1 * t) + -0.06 * sin(173* 2 * PI * 1 * t) + 0.01 * cos(174* 2 * PI * 1 * t) + 0.02 * sin(174* 2 * PI * 1 * t) + 0.13 * cos(175* 2 * PI * 1 * t) + 0.79 * sin(175* 2 * PI * 1 * t) + -0.76 * cos(176* 2 * PI * 1 * t) + 0.15 * sin(176* 2 * PI * 1 * t) + -0.07 * cos(177* 2 * PI * 1 * t) + 0.01 * sin(177* 2 * PI * 1 * t) + 0.03 * cos(178* 2 * PI * 1 * t) + 0.02 * sin(178* 2 * PI * 1 * t) + -0.01 * cos(179* 2 * PI * 1 * t) + -0.01 * sin(179* 2 * PI * 1 * t) + -0.04 * cos(180* 2 * PI * 1 * t) + -0.09 * sin(180* 2 * PI * 1 * t) + 0.08 * cos(181* 2 * PI * 1 * t) + -0.06 * sin(181* 2 * PI * 1 * t) + -0.08 * cos(182* 2 * PI * 1 * t) + -0.09 * sin(182* 2 * PI * 1 * t) + -0.10 * cos(183* 2 * PI * 1 * t) + -0.01 * sin(183* 2 * PI * 1 * t) + 0.06 * cos(184* 2 * PI * 1 * t) + 0.03 * sin(184* 2 * PI * 1 * t) + -0.00 * cos(185* 2 * PI * 1 * t) + -0.01 * sin(185* 2 * PI * 1 * t) + 0.02 * cos(186* 2 * PI * 1 * t) + -0.06 * sin(186* 2 * PI * 1 * t) + -0.05 * cos(187* 2 * PI * 1 * t) + -0.05 * sin(187* 2 * PI * 1 * t) + 0.21 * cos(188* 2 * PI * 1 * t) + 0.06 * sin(188* 2 * PI * 1 * t) + -0.17 * cos(189* 2 * PI * 1 * t) + -0.02 * sin(189* 2 * PI * 1 * t) + -0.07 * cos(190* 2 * PI * 1 * t);
    samples_5[n] = (byte) 100 + 0.02 * sin(190* 2 * PI * 1 * t) + -0.03 * cos(191* 2 * PI * 1 * t) + 0.02 * sin(191* 2 * PI * 1 * t) + -0.03 * cos(192* 2 * PI * 1 * t) + -0.03 * sin(192* 2 * PI * 1 * t) + 0.01 * cos(193* 2 * PI * 1 * t) + -0.06 * sin(193* 2 * PI * 1 * t) + -0.04 * cos(194* 2 * PI * 1 * t) + -0.56 * sin(194* 2 * PI * 1 * t) + 0.95 * cos(195* 2 * PI * 1 * t) + -0.15 * sin(195* 2 * PI * 1 * t) + 0.05 * cos(196* 2 * PI * 1 * t) + -0.02 * sin(196* 2 * PI * 1 * t) + -0.03 * cos(197* 2 * PI * 1 * t) + -0.01 * sin(197* 2 * PI * 1 * t) + 0.04 * cos(198* 2 * PI * 1 * t) + 0.00 * sin(198* 2 * PI * 1 * t) + 0.00 * cos(199* 2 * PI * 1 * t) + 0.05 * sin(199* 2 * PI * 1 * t) + 0.12 * cos(200* 2 * PI * 1 * t) + 0.95 * sin(200* 2 * PI * 1 * t) + -0.63 * cos(201* 2 * PI * 1 * t) + 0.09 * sin(201* 2 * PI * 1 * t) + 0.00 * cos(202* 2 * PI * 1 * t) + -0.01 * sin(202* 2 * PI * 1 * t) + 0.00 * cos(203* 2 * PI * 1 * t) + 0.03 * sin(203* 2 * PI * 1 * t) + 0.00 * cos(204* 2 * PI * 1 * t) + -0.00 * sin(204* 2 * PI * 1 * t) + -0.02 * cos(205* 2 * PI * 1 * t) + 0.06 * sin(205* 2 * PI * 1 * t) + 0.04 * cos(206* 2 * PI * 1 * t) + -0.20 * sin(206* 2 * PI * 1 * t) + 0.16 * cos(207* 2 * PI * 1 * t) + -0.14 * sin(207* 2 * PI * 1 * t) + 0.13 * cos(208* 2 * PI * 1 * t) + 0.05 * sin(208* 2 * PI * 1 * t) + 0.01 * cos(209* 2 * PI * 1 * t) + 0.00 * sin(209* 2 * PI * 1 * t) + -0.03 * cos(210* 2 * PI * 1 * t) + -0.01 * sin(210* 2 * PI * 1 * t) + 0.03 * cos(211* 2 * PI * 1 * t) + -0.01 * sin(211* 2 * PI * 1 * t) + 0.03 * cos(212* 2 * PI * 1 * t) + 0.12 * sin(212* 2 * PI * 1 * t) + -0.05 * cos(213* 2 * PI * 1 * t) + 0.16 * sin(213* 2 * PI * 1 * t) + -0.07 * cos(214* 2 * PI * 1 * t) + -0.03 * sin(214* 2 * PI * 1 * t) + -0.08 * cos(215* 2 * PI * 1 * t) + 0.02 * sin(215* 2 * PI * 1 * t) + 0.02 * cos(216* 2 * PI * 1 * t) + -0.01 * sin(216* 2 * PI * 1 * t) + -0.00 * cos(217* 2 * PI * 1 * t) + -0.03 * sin(217* 2 * PI * 1 * t) + 0.02 * cos(218* 2 * PI * 1 * t) + 0.06 * sin(218* 2 * PI * 1 * t) + -0.20 * cos(219* 2 * PI * 1 * t) + -1.14 * sin(219* 2 * PI * 1 * t) + -1.05 * cos(220* 2 * PI * 1 * t) + 0.09 * sin(220* 2 * PI * 1 * t) + 0.04 * cos(221* 2 * PI * 1 * t) + -0.03 * sin(221* 2 * PI * 1 * t) + -0.01 * cos(222* 2 * PI * 1 * t) + 0.00 * sin(222* 2 * PI * 1 * t) + -0.03 * cos(223* 2 * PI * 1 * t) + 0.03 * sin(223* 2 * PI * 1 * t) + -0.02 * cos(224* 2 * PI * 1 * t) + 0.07 * sin(224* 2 * PI * 1 * t) + 0.12 * cos(225* 2 * PI * 1 * t) + -2.00 * sin(225* 2 * PI * 1 * t) + 0.50 * cos(226* 2 * PI * 1 * t) + -0.13 * sin(226* 2 * PI * 1 * t) + 0.01 * cos(227* 2 * PI * 1 * t);
    samples_6[n] = (byte) 100 + 0.01 * sin(227* 2 * PI * 1 * t) + -0.01 * cos(228* 2 * PI * 1 * t) + 0.03 * sin(228* 2 * PI * 1 * t) + 0.01 * cos(229* 2 * PI * 1 * t) + 0.03 * sin(229* 2 * PI * 1 * t) + 0.02 * cos(230* 2 * PI * 1 * t) + -0.00 * sin(230* 2 * PI * 1 * t) + -0.02 * cos(231* 2 * PI * 1 * t) + 0.16 * sin(231* 2 * PI * 1 * t) + 0.17 * cos(232* 2 * PI * 1 * t) + -0.44 * sin(232* 2 * PI * 1 * t) + 0.03 * cos(233* 2 * PI * 1 * t) + 0.03 * sin(233* 2 * PI * 1 * t) + 0.05 * cos(234* 2 * PI * 1 * t) + -0.01 * sin(234* 2 * PI * 1 * t) + 0.03 * cos(235* 2 * PI * 1 * t) + -0.03 * sin(235* 2 * PI * 1 * t) + -0.01 * cos(236* 2 * PI * 1 * t) + -0.03 * sin(236* 2 * PI * 1 * t) + -0.02 * cos(237* 2 * PI * 1 * t) + -0.01 * sin(237* 2 * PI * 1 * t) + 0.00 * cos(238* 2 * PI * 1 * t) + -0.45 * sin(238* 2 * PI * 1 * t) + 0.23 * cos(239* 2 * PI * 1 * t) + 0.07 * sin(239* 2 * PI * 1 * t) + 0.01 * cos(240* 2 * PI * 1 * t) + -0.01 * sin(240* 2 * PI * 1 * t) + -0.01 * cos(241* 2 * PI * 1 * t) + -0.01 * sin(241* 2 * PI * 1 * t) + -0.00 * cos(242* 2 * PI * 1 * t) + -0.01 * sin(242* 2 * PI * 1 * t) + -0.03 * cos(243* 2 * PI * 1 * t) + -0.03 * sin(243* 2 * PI * 1 * t) + -0.11 * cos(244* 2 * PI * 1 * t) + 0.98 * sin(244* 2 * PI * 1 * t) + -0.74 * cos(245* 2 * PI * 1 * t) + -0.05 * sin(245* 2 * PI * 1 * t) + -0.09 * cos(246* 2 * PI * 1 * t) + -0.02 * sin(246* 2 * PI * 1 * t) + 0.04 * cos(247* 2 * PI * 1 * t) + -0.04 * sin(247* 2 * PI * 1 * t) + 0.03 * cos(248* 2 * PI * 1 * t) + -0.00 * sin(248* 2 * PI * 1 * t) + 0.04 * cos(249* 2 * PI * 1 * t) + -0.02 * sin(249* 2 * PI * 1 * t) + 0.01 * cos(250* 2 * PI * 1 * t) + -0.17 * sin(250* 2 * PI * 1 * t) + 0.05 * cos(251* 2 * PI * 1 * t) + -0.03 * sin(251* 2 * PI * 1 * t) + -0.04 * cos(252* 2 * PI * 1 * t) + -0.05 * sin(252* 2 * PI * 1 * t) + 0.07 * cos(253* 2 * PI * 1 * t) + -0.01 * sin(253* 2 * PI * 1 * t) + -0.01 * cos(254* 2 * PI * 1 * t) + 0.03 * sin(254* 2 * PI * 1 * t) + -0.04 * cos(255* 2 * PI * 1 * t) + -0.07 * sin(255* 2 * PI * 1 * t) + 0.04 * cos(256* 2 * PI * 1 * t) + -0.11 * sin(256* 2 * PI * 1 * t) + -0.10 * cos(257* 2 * PI * 1 * t) + 0.10 * sin(257* 2 * PI * 1 * t) + 0.23 * cos(258* 2 * PI * 1 * t) + 0.00 * sin(258* 2 * PI * 1 * t) + -0.06 * cos(259* 2 * PI * 1 * t) + -0.01 * sin(259* 2 * PI * 1 * t) + 0.01 * cos(260* 2 * PI * 1 * t) + -0.04 * sin(260* 2 * PI * 1 * t) + 0.01 * cos(261* 2 * PI * 1 * t) + 0.03 * sin(261* 2 * PI * 1 * t) + -0.03 * cos(262* 2 * PI * 1 * t) + -0.05 * sin(262* 2 * PI * 1 * t) + 0.03 * cos(263* 2 * PI * 1 * t) + 2.11 * sin(263* 2 * PI * 1 * t);
    samples_7[n] = (byte) 100 + 0.33 * cos(264* 2 * PI * 1 * t) + 0.00 * sin(264* 2 * PI * 1 * t) + 0.03 * cos(265* 2 * PI * 1 * t) + 0.02 * sin(265* 2 * PI * 1 * t) + 0.00 * cos(266* 2 * PI * 1 * t) + -0.01 * sin(266* 2 * PI * 1 * t) + 0.03 * cos(267* 2 * PI * 1 * t) + 0.04 * sin(267* 2 * PI * 1 * t) + -0.03 * cos(268* 2 * PI * 1 * t) + 0.04 * sin(268* 2 * PI * 1 * t) + -0.07 * cos(269* 2 * PI * 1 * t) + -1.33 * sin(269* 2 * PI * 1 * t) + -0.50 * cos(270* 2 * PI * 1 * t) + 0.12 * sin(270* 2 * PI * 1 * t) + -0.02 * cos(271* 2 * PI * 1 * t) + 0.01 * sin(271* 2 * PI * 1 * t) + 0.02 * cos(272* 2 * PI * 1 * t) + 0.03 * sin(272* 2 * PI * 1 * t) + -0.01 * cos(273* 2 * PI * 1 * t) + 0.01 * sin(273* 2 * PI * 1 * t) + -0.01 * cos(274* 2 * PI * 1 * t) + -0.06 * sin(274* 2 * PI * 1 * t) + -0.05 * cos(275* 2 * PI * 1 * t) + 0.03 * sin(275* 2 * PI * 1 * t) + 0.07 * cos(276* 2 * PI * 1 * t) + 0.14 * sin(276* 2 * PI * 1 * t) + -0.18 * cos(277* 2 * PI * 1 * t) + 0.03 * sin(277* 2 * PI * 1 * t) + -0.02 * cos(278* 2 * PI * 1 * t) + 0.01 * sin(278* 2 * PI * 1 * t) + -0.01 * cos(279* 2 * PI * 1 * t) + 0.02 * sin(279* 2 * PI * 1 * t) + 0.01 * cos(280* 2 * PI * 1 * t) + -0.01 * sin(280* 2 * PI * 1 * t) + 0.05 * cos(281* 2 * PI * 1 * t) + 0.02 * sin(281* 2 * PI * 1 * t) + -0.08 * cos(282* 2 * PI * 1 * t) + 0.36 * sin(282* 2 * PI * 1 * t) + -0.60 * cos(283* 2 * PI * 1 * t) + -0.08 * sin(283* 2 * PI * 1 * t) + -0.07 * cos(284* 2 * PI * 1 * t) + -0.03 * sin(284* 2 * PI * 1 * t) + 0.02 * cos(285* 2 * PI * 1 * t) + 0.00 * sin(285* 2 * PI * 1 * t) + 0.01 * cos(286* 2 * PI * 1 * t) + 0.01 * sin(286* 2 * PI * 1 * t) + 0.05 * cos(287* 2 * PI * 1 * t) + 0.00 * sin(287* 2 * PI * 1 * t) + -0.04 * cos(288* 2 * PI * 1 * t) + -1.01 * sin(288* 2 * PI * 1 * t) + -0.46 * cos(289* 2 * PI * 1 * t) + 0.05 * sin(289* 2 * PI * 1 * t) + -0.05 * cos(290* 2 * PI * 1 * t) + -0.02 * sin(290* 2 * PI * 1 * t) + 0.03 * cos(291* 2 * PI * 1 * t) + -0.01 * sin(291* 2 * PI * 1 * t) + -0.01 * cos(292* 2 * PI * 1 * t) + 0.04 * sin(292* 2 * PI * 1 * t) + -0.01 * cos(293* 2 * PI * 1 * t) + 0.00 * sin(293* 2 * PI * 1 * t) + -0.08 * cos(294* 2 * PI * 1 * t) + 0.43 * sin(294* 2 * PI * 1 * t) + -0.30 * cos(295* 2 * PI * 1 * t) + -0.13 * sin(295* 2 * PI * 1 * t) + 0.05 * cos(296* 2 * PI * 1 * t) + 0.05 * sin(296* 2 * PI * 1 * t) + 0.03 * cos(297* 2 * PI * 1 * t) + -0.00 * sin(297* 2 * PI * 1 * t) + 0.00 * cos(298* 2 * PI * 1 * t) + -0.00 * sin(298* 2 * PI * 1 * t) + 0.03 * cos(299* 2 * PI * 1 * t) + -0.04 * sin(299* 2 * PI * 1 * t) + -0.05 * cos(300* 2 * PI * 1 * t) + -0.00 * sin(300* 2 * PI * 1 * t);
  } 
 // sampling_interval = 3; //sampling interval Ts = 1/frequency x number of sample (Ts = 1/Fn or Ts = T/n)x1000000 to convert it in usec
}

void loop() 
{ 
  for (int n = 0; n < 1000; n++) 
  {
    analogWrite(analogOutPin0, samples_0[n] / 32767 * 255); // Send sample to first output pin
    analogWrite(analogOutPin1, samples_1[n] / 32767 * 255);
    analogWrite(analogOutPin2, samples_2[n] / 32767 * 255);
    analogWrite(analogOutPin3, samples_3[n] / 32767 * 255);
    Serial.print("\t output0 = ");
    Serial.println(samples_0[n] / 4 * 255);
    Serial.print("\t output1 = ");
    Serial.println(samples_1[n] / 4 * 255);
    Serial.print("\t output2 = ");
    Serial.println(samples_2[n] / 4 * 255);
    Serial.print("\t output3 = ");
    Serial.println(samples_3[n] / 4 * 255);
    analogWrite(analogOutPin4, samples_4[n] / 32767 * 255);
    analogWrite(analogOutPin5, samples_5[n] / 32767 * 255);
    analogWrite(analogOutPin6, samples_6[n] / 32767 * 255);
    analogWrite(analogOutPin7, samples_7[n] / 32767 * 255);
    // Send sample to second output pin
    //analogWrite(analogOutPin1, samples[j]); 
    //analogWrite(analogOutPin2, samples[j]); 
    //analogWrite(analogOutPin3, samples[j]); 
    //analogWrite(analogOutPin4, samples[j]); 
    //delayMicroseconds(sampling_interval); //time interval 

    Serial.print("\t output4 = ");
    Serial.println(samples_4[n] / 4 * 255);
    Serial.print("\t output5 = ");
    Serial.println(samples_5[n] / 4 * 255);
    Serial.print("\t output6 = ");
    Serial.println(samples_6[n] / 4 * 255);
    Serial.print("\t output7 = ");
    Serial.println(samples_7[n] / 4 * 255);
    //Serial.print("\t output = ");
    //Serial.println(samples[j]);
    
  }
}